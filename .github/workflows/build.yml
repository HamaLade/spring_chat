name: Build and Push to ECR

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: ap-northeast-2  # AWS 리전
  ECR_REPOSITORY_APP: 732800678454.dkr.ecr.ap-northeast-2.amazonaws.com/spring-chat-app-repository  # app 모듈용 ECR 리포지토리 이름
  ECR_REPOSITORY_WEBSOCKET: 732800678454.dkr.ecr.ap-northeast-2.amazonaws.com/spring-chat-websocket-repository  # websocket 모듈용 ECR 리포지토리 이름

jobs:
  check_changes:
    runs-on: ubuntu-latest
    outputs:
      app: ${{ steps.filter.outputs.app }}
      websocket: ${{ steps.filter.outputs.websocket }}
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            app:
              - 'app/**'
            websocket:
              - 'websocket/**'

  build_and_push_app:
    needs: check_changes
    if: ${{ needs.check_changes.outputs.app == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build app module with prod profile
        run: |
          cd app
          ../gradlew build -Pspring.profiles.active=prod

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd app
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_APP:$IMAGE_TAG --build-arg SPRING_PROFILES_ACTIVE=prod .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_APP:$IMAGE_TAG

  build_and_push_websocket:
    needs: check_changes
    if: ${{ needs.check_changes.outputs.websocket == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build websocket module
        run: |
          cd websocket
          ../gradlew build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd websocket
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_WEBSOCKET:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_WEBSOCKET:$IMAGE_TAG